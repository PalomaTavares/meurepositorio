/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package moduloVendas;

import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author pfsta
 */
public class PainelCompraGUI extends javax.swing.JPanel {

    //armazena produto com o codigo informado após a busca
    private Produto produtoSelecionado;
    private ModeloTabelaCompra carrinhoComprasTab;
    private double precoCompra;

    /**
     * Creates new form PainelCompraGUI
     */
    public PainelCompraGUI() {
        initComponents();
        precoCompra = 0.0;
        meuInitComponents();
    }

    private void meuInitComponents() {
        this.carrinhoComprasTab = new ModeloTabelaCompra(this);

        //criar conexão dos dados (comportamento) obj da classe com a tabela GUI
        tabelaCarrinho.setModel(carrinhoComprasTab);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCod = new javax.swing.JTextField();
        txtNom = new javax.swing.JTextField();
        txtQtd = new javax.swing.JTextField();
        txtPrecoU = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaCarrinho = new javax.swing.JTable();
        btnRemov = new javax.swing.JButton();
        btnFinal = new javax.swing.JButton();
        btnEstoque = new javax.swing.JButton();
        btnAddProd = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Código");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Nome");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Quantidade");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Preço unitário");

        txtCod.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtCod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodKeyTyped(evt);
            }
        });

        txtNom.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtNom.setEnabled(false);

        txtQtd.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtQtd.setText("1");
        txtQtd.setEnabled(false);
        txtQtd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQtdKeyReleased(evt);
            }
        });

        txtPrecoU.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtPrecoU.setEnabled(false);

        tabelaCarrinho.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        tabelaCarrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Preço", "Quantidade", "Total Parcial"
            }
        ));
        jScrollPane1.setViewportView(tabelaCarrinho);

        btnRemov.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnRemov.setText("Remover");
        btnRemov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemovActionPerformed(evt);
            }
        });

        btnFinal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnFinal.setText("Finalizar");
        btnFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalActionPerformed(evt);
            }
        });

        btnEstoque.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnEstoque.setText("Estoque");
        btnEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEstoqueActionPerformed(evt);
            }
        });

        btnAddProd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAddProd.setText("Adicionar produto");
        btnAddProd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddProdMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Valor Total:");

        lblTotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTotal.setText("R$ 0,00");

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI", 1, 27)); // NOI18N
        jLabel6.setText("Mercearia de Seu José");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(txtCod, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(txtNom)
                            .addComponent(txtQtd)
                            .addComponent(txtPrecoU)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(btnAddProd)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnFinal))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnEstoque)
                            .addComponent(btnRemov))
                        .addGap(88, 88, 88))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(321, 321, 321))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPrecoU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(151, 151, 151))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(btnRemov)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEstoque)
                                .addGap(94, 94, 94)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnAddProd)
                                    .addComponent(jLabel5)
                                    .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnFinal)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEstoqueActionPerformed
        FramePrincipal.efetuarTransicao(new EstoqueGUI(), "estoque");
    }//GEN-LAST:event_btnEstoqueActionPerformed

    private void txtCodKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodKeyTyped
        if (evt.getKeyChar() == '\n') {
            // avalia se existe informacao no campo codigo
            if (!txtCod.getText().isEmpty()) {
                try {
                    //avalia se o formato e numerico
                    int cod = Integer.parseInt(txtCod.getText());

                    //efetua a busca do produto com codigo formato GUI
                    produtoSelecionado = FakeBD.consultaProdutoCod(cod);

                    // avalia se existe algum produto com o codigo informado
                    if (produtoSelecionado != null) {
                        // atualizamos campos com os dados do produto
                        txtNom.setText(produtoSelecionado.getNome());
                        txtPrecoU.setText(produtoSelecionado.getPreco() + "");
                        txtQtd.setEnabled(true);
                    } else {
                        //caso não cadastrado
                        JOptionPane.showMessageDialog(null, "Produto não cadastrado", "Código", JOptionPane.INFORMATION_MESSAGE);
                    }

                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "O código deve ser numérico", "erro no código",
                            JOptionPane.WARNING_MESSAGE);

                }

            }
        }


    }//GEN-LAST:event_txtCodKeyTyped

    private void txtQtdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQtdKeyReleased

        //operador do caixa vai informar uma nova quantidade
        //calcular o preço parcial desses produtos (lote)
        if (!txtQtd.getText().isEmpty()) {
            try {
                int quantidade = Integer.parseInt(txtQtd.getText());

                double parc = produtoSelecionado.getPreco() * quantidade;
                txtPrecoU.setText(String.format("%.2f", parc));
            } catch (NumberFormatException ex) {
                txtPrecoU.setText("N/A");
            }

        } else {
            //campo quantidade sem informação
            txtPrecoU.setText("N/A");
        }
    }//GEN-LAST:event_txtQtdKeyReleased

    private void btnAddProdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddProdMouseClicked
        if (produtoSelecionado != null && !txtQtd.getText().equals("N/A")) {
            //produto está apto a ser adicionado na tabela
            int quantidade = Integer.parseInt(txtQtd.getText());
            if (quantidade <= produtoSelecionado.getQuantidade()) {
                Produto vendido = new Produto(produtoSelecionado.getCodigo(),
                        produtoSelecionado.getNome(),
                        produtoSelecionado.getPreco(),
                        quantidade);

                // produtoSelecionado.setQuantidade(produtoSelecionado.getQuantidade() - quantidade);
                //aqui estamos atualizando o valor da compra do cliente
                precoCompra += produtoSelecionado.getPreco() * quantidade;
                lblTotal.setText(String.format("%.2f", precoCompra));

                //limpando informações para que um novo produto seja informado
                txtCod.setText("");
                txtQtd.setText("1");
                txtPrecoU.setText("");
                produtoSelecionado = null;
                txtQtd.setEnabled(false);
                txtNom.setText("");

                //add o produto vendido a tabela
                this.carrinhoComprasTab.addNovoProduto(vendido);
                tabelaCarrinho.updateUI();

            } else {
                JOptionPane.showMessageDialog(null, "Não há quantidade suficiente para realizar a venda desse produto",
                        "quantidade insuf.", JOptionPane.INFORMATION_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(null, "A quantidade de produtos informada deve ser um valor numérico",
                    "entrada quantidade inválida.", JOptionPane.INFORMATION_MESSAGE);

        }


    }//GEN-LAST:event_btnAddProdMouseClicked

    private void btnRemovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemovActionPerformed
        int linha = tabelaCarrinho.getSelectedRow();

        if (linha > -1) {

            //ok posso remover o produto
            int op = JOptionPane.showConfirmDialog(null, "Desejo remover o produto selecionado",
                    "Confirmação de exclusão", JOptionPane.YES_NO_OPTION);

            if (op == JOptionPane.YES_NO_OPTION) {
                //remover o produto e atualizar 

                String senha = JOptionPane.showInputDialog(null, "Informe a senha do gerente",
                        "operação restrita", JOptionPane.INFORMATION_MESSAGE);
                if (senha != null && senha.equals("ifmg")) {

                    carrinhoComprasTab.removeProdutoCarrinho(linha);
                    atualizaQuantidades();
                }

            }

        } else {
            //produto não foi selecionado para remoção
            JOptionPane.showMessageDialog(null, "primeiro é necessário selecionar algum produto",
                    "selecionar !!!", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnRemovActionPerformed

    private boolean verificaQuantidade() {
        Vector<Produto> produtos = carrinhoComprasTab.produtosCarrinho();

        for (int i = 0; i < produtos.size(); i++) {
            Produto estoque = FakeBD.consultaProdutoCod(produtos.get(i).getCodigo());
            if (produtos.get(i).getQuantidade() > estoque.getQuantidade()) {
                JOptionPane.showMessageDialog(null, "A quantidade do produto: " + estoque.getNome()
                        + " não é suficiente para real. a venda", "Quantidade insuf.", JOptionPane.INFORMATION_MESSAGE);
                return false;
            }
        }
        return true;
    }
    private void btnFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalActionPerformed

        // verificar se temos a quantidade de produtos que estão sendo vendidos
        if (verificaQuantidade() == true) {
            //atualizar banco de dados fake (memoria RAM)
            Vector<Produto> produtos = carrinhoComprasTab.produtosCarrinho();

            for (int i = 0; i < produtos.size(); i++) {
                Produto estoque = FakeBD.consultaProdutoCod(produtos.get(i).getCodigo());
                estoque.setQuantidade(estoque.getQuantidade() - produtos.get(i).getQuantidade());
            }

            //zerando o valor total para a próxima compra
            precoCompra = 0.0;
            lblTotal.setText("0.0");

            //remover os produtos do carrinho de compras da compra finalizada
            carrinhoComprasTab.limpaCarrinho();
            tabelaCarrinho.updateUI();
        }


    }//GEN-LAST:event_btnFinalActionPerformed
    public void atualizaQuantidades() {
        //atualiza as informações da tabela
        tabelaCarrinho.updateUI();

        // atualizamos o valor da compra com os produtos do carrinho
        double preco = carrinhoComprasTab.calculaPrecoParcialCompra();
        lblTotal.setText(String.format("%.2f", preco));

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddProd;
    private javax.swing.JButton btnEstoque;
    private javax.swing.JButton btnFinal;
    private javax.swing.JButton btnRemov;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tabelaCarrinho;
    private javax.swing.JTextField txtCod;
    private javax.swing.JTextField txtNom;
    private javax.swing.JTextField txtPrecoU;
    private javax.swing.JTextField txtQtd;
    // End of variables declaration//GEN-END:variables
}
